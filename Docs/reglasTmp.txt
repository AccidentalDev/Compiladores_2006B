      reglaTmp=new ArrayList(8);
      reglaTmp.add("ARCHIVOS");
      reglaTmp.add("CONSTANTES");
      reglaTmp.add("VARIABLES");
      reglaTmp.add("ARREGLOS");
      reglaTmp.add("REGISTROS");
      reglaTmp.add("PROTOTIPOS");
      reglaTmp.add("MODULOS");
      reglaTmp.add("PRINCIPAL");
      Reglas.put("Programa",reglaTmp);
      //int array1[]={1,5,11,19,40,53,57,62};
      int array1[]={0,0,0,0,0,0,0,0};
      ReglasE.put("Programa",array1);
      
      reglaTmp=new ArrayList(5);
      reglaTmp.add("ARCHIVOS");
      reglaTmp.add("[");
      reglaTmp.add("<Cadena>");//reuse
      reglaTmp.add(",");
      reglaTmp.add("]");
      Reglas.put("Archivos",reglaTmp);
      //int array2[]={1,2,2,2,4};
      int array2[]={0,1,2,3,3};
      ReglasE.put("Archivos",array2);
      
      reglaTmp=new ArrayList(10);
      reglaTmp.add("CONSTANTES");
      reglaTmp.add("[");
      reglaTmp.add("<Identificador>");
      reglaTmp.add("<Op_Asign>");
      reglaTmp.add("<Cadena>");
      reglaTmp.add("<Entero>");
      reglaTmp.add("<Real>");
      reglaTmp.add("<Logico>");
      reglaTmp.add(",");
      reglaTmp.add("]");
      Reglas.put("Constantes",reglaTmp);
      //int array3[]={5,6,7,8,9,9,9,9,6,10};
      int array3[]={0,5,6,7,8,8,8,8,9,9};
      ReglasE.put("Constantes",array3);
      
      reglaTmp=new ArrayList(16);
      reglaTmp.add("<Identificador>");
      reglaTmp.add("<Identificador>");// 1
      reglaTmp.add("VARIABLES");
      reglaTmp.add("[");
      reglaTmp.add("<Op_Asign>");
      reglaTmp.add(",");
      reglaTmp.add(";");
      reglaTmp.add("<Cadena>");
      reglaTmp.add("<Entero>");
      reglaTmp.add("<Real>");
      reglaTmp.add("<Logico>");
      reglaTmp.add("ENTERO");
      reglaTmp.add("REAL");
      reglaTmp.add("CADENA");
      reglaTmp.add("LOGICO");
      reglaTmp.add("]");
      Reglas.put("Variables",reglaTmp);
      //int array4[]={14,18,11,12,16,13,12,17,17,17,17,13,13,13,13,15};
      //int array4[]={13,16,0
      int array4[]={13,13,0,11,14,14,14,16,16,16,16,12,12,12,12,14};
      ReglasE.put("Variables",array4);
      
      reglaTmp=new ArrayList(44);
      reglaTmp.add("[");//                  0-20
      reglaTmp.add("<Entero>");//           1-24
      //Desviacion para arreglo simple
      reglaTmp.add("}");//                  2-25
      reglaTmp.add(",");//                  3-21
      reglaTmp.add(";");//                  4-20
      reglaTmp.add("<-");//                 5-28
      reglaTmp.add("]");//                  6-31
      reglaTmp.add("[");//                  7-29
      reglaTmp.add("<Entero>");//           8-30
      reglaTmp.add("<Real>");//             9-30
      reglaTmp.add("<Cadena>");//          10-30
      reglaTmp.add("<Logico>");//          11-30
      reglaTmp.add(",");//                 12-29
      reglaTmp.add("]");//                 13-31
      reglaTmp.add(",");//                 14-21
      reglaTmp.add(";");//                 15-20
      reglaTmp.add("]");//                 16-27
      //Desviacion para arreglo bidimensional
      reglaTmp.add(",");//                 17-26
      reglaTmp.add("<Entero>");//          18-32
      reglaTmp.add("}");//                 19-33
      reglaTmp.add(",");//                 20-21
      reglaTmp.add(";");//                 21-20
      reglaTmp.add("<-");//                22-34
      reglaTmp.add("]");//                 23-38
      reglaTmp.add("[");//                 24-35
      reglaTmp.add("[");//                 25-36
      reglaTmp.add("<Entero>");//          26-37
      reglaTmp.add("<Real>");//            27-37
      reglaTmp.add("<Cadena>");//          28-37
      reglaTmp.add("<Logico>");//          29-37
      reglaTmp.add(",");//                 30-36
      reglaTmp.add("]");//                 31-38
      reglaTmp.add(",");//                 32-35
      reglaTmp.add("]");//                 33-39
      reglaTmp.add(",");//                 34-21
      reglaTmp.add(";");//                 35-20
      reglaTmp.add("]");//                 36-27
      //Elementos generales:
      reglaTmp.add("ARREGLOS");//          37-19
      reglaTmp.add("ENTERO");//            38-21
      reglaTmp.add("REAL");//              39-21
      reglaTmp.add("CADENA");//            40-21
      reglaTmp.add("LOGICO");//            41-21
      reglaTmp.add("<Identificador>");//   42-22
      reglaTmp.add("{");//                 43-23
      Reglas.put("Arreglos",reglaTmp);
      /*int array5[]={20,24,
                    25,21,20,28,31,29,30,30,30,30,29,31,21,20,27,
                    26,32,33,21,20,34,38,35,36,37,37,37,37,36,38,35,39,21,20,27,
                    19,21,21,21,21,22,23};*/
      int array5[]={19,23,
                    24,25,25,25,30,28,29,29,29,29,30,30,31,31,31,
                    24,26,32,33,33,33,37,34,35,36,36,36,36,37,37,38,38,39,39,39,
                    0,20,20,20,20,21,22};
      ReglasE.put("Arreglos",array5);
      
      reglaTmp=new ArrayList(25);
      reglaTmp.add("[");//                  0-41
      reglaTmp.add("<Identificador>");//    1-42
      reglaTmp.add("[");//                  2-43
      reglaTmp.add("<Identificador>");//    3-45
      reglaTmp.add(",");//                  4-44
      reglaTmp.add(";");//                  5-43
      reglaTmp.add("]");//                  6-46
      reglaTmp.add(";");//                  7-41
      reglaTmp.add("]");//                  8-52
      reglaTmp.add("{");//                  9-47
      reglaTmp.add("<Entero>");//          10-48
      reglaTmp.add("}");//                 11-51
      reglaTmp.add(",");//                 12-49
      reglaTmp.add("<Entero>");//          13-50
      reglaTmp.add("}");//                 14-51
      reglaTmp.add(";");//                 15-41
      reglaTmp.add("]");//                 16-52
      reglaTmp.add("REGISTROS");//         17-40
      reglaTmp.add("ENTERO");//            18-44
      reglaTmp.add("REAL");//              19-44
      reglaTmp.add("CADENA");//            20-44
      reglaTmp.add("LOGICO");//            21-44
      reglaTmp.add("<Identificador>");//   22-42
      reglaTmp.add("[");//                 23-43
      reglaTmp.add("{");//                 24-47
      Reglas.put("Registros",reglaTmp);
      //int array6[]={41,42,43,45,44,43,46,41,52,47,48,51,49,50,51,41,52,40,44,44,44,44,42,43,47};
      int array6[]={40,41,42,44,45,45,45,46,46,46,47,48,48,49,50,51,51,0,43,43,43,43,41,42,46};
      ReglasE.put("Registros",array6);
      
      reglaTmp=new ArrayList(6);
      reglaTmp.add("PROTOTIPOS");//        0
      reglaTmp.add("[");//                 1
      reglaTmp.add("]");//                 2
      reglaTmp.add("PROCEDIMIENTO");//     3 reuse
      reglaTmp.add("FUNCION");//           4 reuse
      reglaTmp.add(";");//                 5
      Reglas.put("Prototipos",reglaTmp);
      //int array7[]={53,54,56,54,54,54};
      int array7[]={0,53,55,54,54,55};
      ReglasE.put("Prototipos",array7);
      
      reglaTmp=new ArrayList(6);
      reglaTmp.add("MODULOS");//           0
      reglaTmp.add("[");//                 1
      reglaTmp.add("]");//                 2
      reglaTmp.add("PROCEDIMIENTO");//     3 reuse
      reglaTmp.add("FUNCION");//           4 reuse
      reglaTmp.add(";");//                 5
      Reglas.put("Modulos",reglaTmp);
      //int array8[]={57,58,61,58,58,58};
      int array8[]={0,57,60,58,58,60};
      ReglasE.put("Modulos",array8);
      
      reglaTmp=new ArrayList(8);
      reglaTmp.add("PROCEDIMIENTO");//     0
      reglaTmp.add("<Identificador>");//   1
      reglaTmp.add("{");//                 2
      reglaTmp.add("}");//                 3 reuse
      reglaTmp.add("ENTERO");//            4 reuse
      reglaTmp.add("REAL");//              5 reuse
      reglaTmp.add("CADENA");//            6 reuse
      reglaTmp.add("LOGICO");//            7 reuse
      Reglas.put("EncabezadoProc",reglaTmp);
      //int array9[]={63,64,65,66,65,65,65,65};
      int array9[]={211,63,64,65,65,65,65,65};
      ReglasE.put("EncabezadoProc",array9);
      
      reglaTmp=new ArrayList(12);
      reglaTmp.add("ENTERO");//             0-69 reuse
      reglaTmp.add("REAL");//               1-69 reuse
      reglaTmp.add("CADENA");//             2-69 reuse
      reglaTmp.add("LOGICO");//             3-69 reuse
      reglaTmp.add("ENTERO");//             4-71 reuse
      reglaTmp.add("REAL");//               5-71 reuse
      reglaTmp.add("CADENA");//             6-71 reuse
      reglaTmp.add("LOGICO");//             7-71 reuse
      reglaTmp.add("FUNCION");//            8-67
      reglaTmp.add("<Identificador>");//    9-68
      reglaTmp.add("{");//                 10-69
      reglaTmp.add("}");//                 11-71
      Reglas.put("EncabezadoFunc",reglaTmp);
      //int array10[]={69,69,69,69,71,71,71,71,67,68,69,71};
      int array10[]={69,69,69,69,71,71,71,71,212,67,68,70};
      ReglasE.put("EncabezadoFunc",array10);
      
      reglaTmp=new ArrayList(11);
      reglaTmp.add("<Entero>");//           0-75
      reglaTmp.add("<Entero>");//           1-78
      reglaTmp.add("<Identificador>");//    2-73
      reglaTmp.add("{");//                  3-74
      reglaTmp.add("}");//                  4-76
      reglaTmp.add(",");//                  5-72
      reglaTmp.add(";");//                  6-79
      reglaTmp.add("ENTERO");//             7-72
      reglaTmp.add("REAL");//               8-72
      reglaTmp.add("CADENA");//             9-72
      reglaTmp.add("LOGICO");//            10-72
      Reglas.put("Parametros",reglaTmp);
      //Revisar cuando se espera una coma al estar dentro de dimensiones (al caso 77)
      //int array11[]={75,78,73,74,76,72,79,72,72,72,72};
      int array11[]={74,77,72,73,78,73,76,79,79,79,79};
      ReglasE.put("Parametros",array11);
      
      reglaTmp=new ArrayList(4);
      reglaTmp.add("VARIABLES");//Reuse
      reglaTmp.add("ARREGLOS");//Reuse
      reglaTmp.add("REGISTROS");//Reuse
      reglaTmp.add("INICIO");//Reuse
      Reglas.put("Cuerpo",reglaTmp);
      int array12[]={80,80,80,83};
      ReglasE.put("Cuerpo",array12);
      
      reglaTmp=new ArrayList(5);
      reglaTmp.add("INICIO");
      reglaTmp.add("[");
      reglaTmp.add(";");
      reglaTmp.add("]");
      reglaTmp.add("FIN");
      //IMPORTANTE: Si no es ninguno de estos elementos, entrar en Instruccion, 
      //            a menos que ya se haya encontrado el corchete de cierre
      Reglas.put("Bloque",reglaTmp);
      //int array13[]={86,87,89,91,92};
      int array13[]={85,86,88,90,91};
      ReglasE.put("Bloque",array13);
      
      //------------------- Fragmentos para analizar instruccion -------------------
      reglaTmp=new ArrayList(6);
      reglaTmp.add("SI");//                0-102
      reglaTmp.add("MIENTRAS");//          1-103
      reglaTmp.add("HACER");//             2-104
      reglaTmp.add("DESDE");//             3-105
      reglaTmp.add("DEPENDIENDO");//       4-106
      reglaTmp.add("LEER");//              5-111
      Reglas.put("Instruccion",reglaTmp);
      //int array14[]={102,103,104,105,106,111};
      int array14[]={93,93,93,93,93,93};
      ReglasE.put("Instruccion",array14);
      
      reglaTmp=new ArrayList(6);
      reglaTmp.add("<Identificador>");//   0-94
      reglaTmp.add("(");//                 1-95
      reglaTmp.add(")");//                 2-101
      reglaTmp.add("<-");//                3-98
      reglaTmp.add("[");//                 4-99
      reglaTmp.add("{");//                 5-100
      Reglas.put("InstruccionIdent",reglaTmp);
      //int array15[]={94,95,101,98,99,100};
      int array15[]={93,94,96,94,94,94};
      ReglasE.put("InstruccionIdent",array15);
      
      reglaTmp=new ArrayList(3);
      reglaTmp.add("REGRESAR");//          0-107
      reglaTmp.add("(");//                 1-108
      reglaTmp.add(")");//                 2-101
      Reglas.put("InstruccionReturn",reglaTmp);
      //int array16[]={107,108,101};
      int array16[]={93,107,109};
      ReglasE.put("InstruccionReturn",array16);
      
      reglaTmp=new ArrayList(3);
      reglaTmp.add("ESCRIBIR");//          0-112
      reglaTmp.add("(");//                 1-113
      reglaTmp.add(")");//                 2-101
      Reglas.put("InstruccionWrite",reglaTmp);
      //int array17[]={112,113,101};
      int array17[]={93,112,114};
      ReglasE.put("InstruccionWrite",array17);
      
      reglaTmp=new ArrayList(3);
      reglaTmp.add("ESCRIBIRCSL");//       0-116
      reglaTmp.add("(");//                 1-117
      reglaTmp.add(")");//                 2-101
      Reglas.put("InstruccionWriteLN",reglaTmp);
      //int array18[]={116,117,101};
      int array18[]={93,116,118};
      ReglasE.put("InstruccionWriteLN",array18);
      
      reglaTmp=new ArrayList(4);
      reglaTmp.add("DTPT");//              0-120
      reglaTmp.add("LPPT");//              1-120
      reglaTmp.add("(");//                 2-121
      reglaTmp.add(")");//                 3-101
      Reglas.put("InstruccionPT",reglaTmp);
      //int array19[]={120,120,121,101};
      int array19[]={93,93,120,121};
      ReglasE.put("InstruccionPT",array19);
      //--------------------- Fin de fragmentos de instruccion ---------------------
      
      reglaTmp=new ArrayList(5);
      reglaTmp.add("SI");
      reglaTmp.add("SINO");
      reglaTmp.add("SINOSI");
      Reglas.put("Si",reglaTmp);
      //int array20[]={122,125,122};
      int array20[]={213,124,124};
      ReglasE.put("Si",array20);
      
      reglaTmp=new ArrayList(2);
      reglaTmp.add("MIENTRAS");
      reglaTmp.add("INICIO");// reuse
      Reglas.put("Mientras",reglaTmp);
      //int array21[]={127,128};
      int array21[]={214,128};
      ReglasE.put("Mientras",array21);
      
      reglaTmp=new ArrayList(3);
      reglaTmp.add("HACER");
      reglaTmp.add("INICIO");// reuse
      reglaTmp.add("HASTA");
      Reglas.put("Hacer",reglaTmp);
      //int array22[]={130,130,132};
      int array22[]={215,130,131};
      ReglasE.put("Hacer",array22);
      
      reglaTmp=new ArrayList(26);
      reglaTmp.add("DESDE");//             0-134
      reglaTmp.add("<Identificador>");//   1-135
      reglaTmp.add("{");//                 2-136
      //Para entrar a expresion:
      reglaTmp.add("(");//                 3-136 reuse
      reglaTmp.add("+");//                 4-136 reuse
      reglaTmp.add("-");//                 5-136 reuse
      reglaTmp.add("<Identificador>");//   6-136 reuse
      reglaTmp.add("<Entero>");//          7-136 reuse
      reglaTmp.add("<Real>");//            8-136 reuse
      reglaTmp.add("<Cadena>");//          9-136 reuse
      reglaTmp.add("<Logico>");//         10-136 reuse
      //Fin de expresion
      reglaTmp.add(",");//                11-138
      //Para entrar a expresion:
      reglaTmp.add("(");//                12-138 reuse
      reglaTmp.add("+");//                13-138 reuse
      reglaTmp.add("-");//                14-138 reuse
      reglaTmp.add("<Identificador>");//  15-138 reuse
      reglaTmp.add("<Entero>");//         16-138 reuse
      reglaTmp.add("<Real>");//           17-138 reuse
      reglaTmp.add("<Cadena>");//         18-138 reuse
      reglaTmp.add("<Logico>");//         19-138 reuse
      //Fin de expresion
      reglaTmp.add("}");//                20-140
      reglaTmp.add("INC");//              21-141
      reglaTmp.add("DEC");//              22-141
      reglaTmp.add("INICIO");//           23-140 reuse
      reglaTmp.add("<Entero>");//         24-142
      reglaTmp.add("INICIO");//           25-142 reuse
      Reglas.put("Desde",reglaTmp);
      //int array23[]={134,135,136,136,136,136,136,136,136,136,136,138,138,138,138,138,138,138,138,138,140,141,141,140,142,142};
      int array23[]={216,134,135,136,136,136,136,136,136,136,136,137,138,138,138,138,138,138,138,138,139,140,140,140,141,142};
      ReglasE.put("Desde",array23);
      
      reglaTmp=new ArrayList(16);
      reglaTmp.add("DEPENDIENDO");//       0-144
      reglaTmp.add("<Identificador>");//   1-145
      reglaTmp.add("[");//                 2-146
      reglaTmp.add("CASO");//              3-147
      reglaTmp.add("<Identificador>");//   4-148
      reglaTmp.add("<Entero>");//          5-148
      reglaTmp.add("<Real>");//            6-148
      reglaTmp.add("<Cadena>");//          7-148
      reglaTmp.add("<Logico>");//          8-148
      reglaTmp.add("|");//                 9-147
      reglaTmp.add("INICIO");//           10-148 reuse
      reglaTmp.add(";");//                11-150
      reglaTmp.add("CUALQUIER");//        12-151
      reglaTmp.add("OTRO");//             13-152
      reglaTmp.add("INICIO");//           14-152 reuse
      reglaTmp.add("]");//                15-154
      Reglas.put("Dependiendo",reglaTmp);
      //int array24[]={144,145,146,147,148,148,148,148,148,147,148,150,151,152,152,154};
      int array24[]={217,144,145,146,147,147,147,147,147,148,148,149,150,151,152,153};
      ReglasE.put("Dependiendo",array24);
      
      reglaTmp=new ArrayList(1);
      reglaTmp.add("<-");
      Reglas.put("Asignacion",reglaTmp);
      int arrayX[]={230};//155
      ReglasE.put("Asignacion",arrayX);
      
      reglaTmp=new ArrayList(23);
      //Para entrar a expresion:
      reglaTmp.add("(");//                 0-160 reuse
      reglaTmp.add("+");//                 1-160 reuse
      reglaTmp.add("-");//                 2-160 reuse
      reglaTmp.add("<Identificador>");//   3-160 reuse
      reglaTmp.add("<Entero>");//          4-160 reuse
      reglaTmp.add("<Real>");//            5-160 reuse
      reglaTmp.add("<Cadena>");//          6-160 reuse
      reglaTmp.add("<Logico>");//          7-160 reuse
      //Fin de expresion
      reglaTmp.add(",");//                 8-162
      //Para entrar a expresion:
      reglaTmp.add("(");//                 9-162 reuse
      reglaTmp.add("+");//                10-162 reuse
      reglaTmp.add("-");//                11-162 reuse
      reglaTmp.add("<Identificador>");//  12-162 reuse
      reglaTmp.add("<Entero>");//         13-162 reuse
      reglaTmp.add("<Real>");//           14-162 reuse
      reglaTmp.add("<Cadena>");//         15-162 reuse
      reglaTmp.add("<Logico>");//         16-162 reuse
      //Fin de expresion
      reglaTmp.add("}");//                17-164
      reglaTmp.add("<-");//               18-165
      reglaTmp.add("[");//                19-157
      reglaTmp.add("<Identificador>");//  20-158
      reglaTmp.add("]");//                21-159
      //Desvio hacia dimensiones de arreglo
      reglaTmp.add("{");//                22-160
      Reglas.put("AsignacionReg",reglaTmp);
      /*int array25[]={160,160,160,160,160,160,160,160,
                     162,162,162,162,162,162,162,162,162,164,165,157,158,159,160};*/
      int array25[]={160,160,160,160,160,160,160,160,
                     161,162,162,162,162,162,162,162,162,163,159,231,157,158,159};
      ReglasE.put("AsignacionReg",array25);
      
      reglaTmp=new ArrayList(38);
      //Desviacion hacia asignacion normal
      //Para entrar a expresion:
      reglaTmp.add("(");//                 0-167 reuse
      reglaTmp.add("+");//                 1-167 reuse
      reglaTmp.add("-");//                 2-167 reuse
      reglaTmp.add("<Identificador>");//   3-167 reuse
      reglaTmp.add("<Entero>");//          4-167 reuse
      reglaTmp.add("<Real>");//            5-167 reuse
      reglaTmp.add("<Cadena>");//          6-167 reuse
      reglaTmp.add("<Logico>");//          7-167 reuse
      //Fin de expresion
      reglaTmp.add(",");//                 8-169
      //Para entrar a expresion:
      reglaTmp.add("(");//                 9-169 reuse
      reglaTmp.add("+");//                10-169 reuse
      reglaTmp.add("-");//                11-169 reuse
      reglaTmp.add("<Identificador>");//  12-169 reuse
      reglaTmp.add("<Entero>");//         13-169 reuse
      reglaTmp.add("<Real>");//           14-169 reuse
      reglaTmp.add("<Cadena>");//         15-169 reuse
      reglaTmp.add("<Logico>");//         16-169 reuse
      //Fin de expresion
      reglaTmp.add("}");//                17-171
      reglaTmp.add("<-");//               18-172
      //Desviacion a inicializacion unidimensional
      reglaTmp.add("<Entero>");//         19-177
      reglaTmp.add("<Real>");//           20-177
      reglaTmp.add("<Cadena>");//         21-177
      reglaTmp.add("<Logico>");//         22-177
      reglaTmp.add(",");//                23-209
      reglaTmp.add("]");//                24-182
      //Desviacion a inicializacion bidimensional
      reglaTmp.add("]");//                25-181
      reglaTmp.add("]");//                26-182
      reglaTmp.add("[");//                27-178
      reglaTmp.add("<Entero>");//         28-179
      reglaTmp.add("<Real>");//           29-179
      reglaTmp.add("<Cadena>");//         30-179
      reglaTmp.add("<Logico>");//         31-179
      reglaTmp.add(",");//                32-180
      reglaTmp.add(",");//                33-178
      reglaTmp.add("{");//                34-167
      reglaTmp.add("}");//                35-174
      reglaTmp.add("<-");//               36-175
      reglaTmp.add("[");//                37-176
      Reglas.put("AsignacionArr",reglaTmp);
      /*int array26[]={167,167,167,167,167,167,167,167,169,169,169,169,169,169,169,169,169,171,172,
                     177,177,177,177,209,182,181,182,178,179,179,179,179,180,178,167,174,175,176};*/
      int array26[]={167,167,167,167,167,167,167,167,168,169,169,169,169,169,169,169,169,168,171,
                     176,176,176,176,177,177,179,181,176,178,178,178,178,181,179,232,167,174,175};
      ReglasE.put("AsignacionArr",array26);
      
      reglaTmp=new ArrayList(8);
      reglaTmp.add("<Identificador>");//   0-185
      reglaTmp.add("<Identificador>");//   1-187
      reglaTmp.add("(");//                 2-184
      reglaTmp.add("[");//                 3-186
      reglaTmp.add("]");//                 4-188
      reglaTmp.add("{");//                 5-185 reuse
      reglaTmp.add(",");//                 6-184
      reglaTmp.add(")");//                 7-190
      Reglas.put("Leer",reglaTmp);
      //int array27[]={185,187,184,186,188,185,184,190};
      int array27[]={184,186,183,185,187,185,185,185};
      ReglasE.put("Leer",array27);
      
      reglaTmp=new ArrayList(19);
      reglaTmp.add("{");//                 0-192
      //Para entrar a expresion:
      reglaTmp.add("(");//                 1-192 reuse
      reglaTmp.add("+");//                 2-192 reuse
      reglaTmp.add("-");//                 3-192 reuse
      reglaTmp.add("<Identificador>");//   4-192 reuse
      reglaTmp.add("<Entero>");//          5-192 reuse
      reglaTmp.add("<Real>");//            6-192 reuse
      reglaTmp.add("<Cadena>");//          7-192 reuse
      reglaTmp.add("<Logico>");//          8-192 reuse
      //Fin de expresion
      reglaTmp.add(",");//                 9-194
      //Para entrar a expresion:
      reglaTmp.add("(");//                10-194 reuse
      reglaTmp.add("+");//                11-194 reuse
      reglaTmp.add("-");//                12-194 reuse
      reglaTmp.add("<Identificador>");//  13-194 reuse
      reglaTmp.add("<Entero>");//         14-194 reuse
      reglaTmp.add("<Real>");//           15-194 reuse
      reglaTmp.add("<Cadena>");//         16-194 reuse
      reglaTmp.add("<Logico>");//         17-194 reuse
      //Fin de expresion
      reglaTmp.add("}");//                18-196
      Reglas.put("Dimensiones_Ident",reglaTmp);
      //int array28[]={192,192,192,192,192,192,192,192,192,194,194,194,194,194,194,194,194,194,196};
      int array28[]={191,192,192,192,192,192,192,192,192,193,194,194,194,194,194,194,194,194,195};
      ReglasE.put("Dimensiones_Ident",array28);
      
      reglaTmp=new ArrayList(22);
      reglaTmp.add("(");//                 0-200
      reglaTmp.add("+");//                 1-198
      reglaTmp.add("-");//                 2-198
      reglaTmp.add("<Identificador>");//   3-202
      reglaTmp.add("<Entero>");//          4-199
      reglaTmp.add("<Real>");//            5-199
      reglaTmp.add("<Cadena>");//          6-199
      reglaTmp.add("<Logico>");//          7-199
      reglaTmp.add("{");//                 8-202 reuse
      //Desvio a parentesis
      reglaTmp.add("(");//                 9-203
      //Desvio a corchetes
      reglaTmp.add("[");//                10-206
      reglaTmp.add("<Identificador>");//  11-207
      reglaTmp.add("]");//                12-208
      reglaTmp.add("{");//                13-208 reuse
      reglaTmp.add(")");//                14-204
      reglaTmp.add("+");//                15-197
      reglaTmp.add("-");//                16-197
      reglaTmp.add("*");//                17-197
      reglaTmp.add("/");//                18-197
      reglaTmp.add("POT");//              19-197
      reglaTmp.add("DIV");//              20-197
      reglaTmp.add("MOD");//              21-197
      Reglas.put("Expresion",reglaTmp);
      //int array29[]={200,198,198,202,199,199,199,199,202,203,206,207,208,208,204,197,197,197,197,197,197,197};
      int array29[]={197,197,197,197,197,197,197,197,202,202,202,206,207,208,205,199,199,199,199,199,199,199};
      ReglasE.put("Expresion",array29);
      
      reglaTmp=new ArrayList(1);
      reglaTmp.add(",");
      Reglas.put("Parametros_Ident",reglaTmp);
      int arrayY[]={221};//220
      ReglasE.put("Parametros_Ident",arrayY);
      
      reglaTmp=new ArrayList(12);
      reglaTmp.add("!");//                 0-223
      reglaTmp.add("<Op_Rel>");//          1-223
      reglaTmp.add("&");//                 2-222
      reglaTmp.add("|");//                 3-222
      //Para entrar a expresion:
      reglaTmp.add("(");//                 4-223 reuse
      reglaTmp.add("+");//                 5-223 reuse
      reglaTmp.add("-");//                 6-223 reuse
      reglaTmp.add("<Identificador>");//   7-223 reuse
      reglaTmp.add("<Entero>");//          8-223 reuse
      reglaTmp.add("<Real>");//            9-223 reuse
      reglaTmp.add("<Cadena>");//         10-223 reuse
      reglaTmp.add("<Logico>");//         11-223 reuse
      //Fin de expresion
      Reglas.put("Regla_OR",reglaTmp);
      //int array30[]={223,223,222,222,223,223,223,223,223,223,223,223};
      int array30[]={222,224,224,224,223,223,223,223,223,223,223,223};
      ReglasE.put("Regla_OR",array30);
      
      reglaTmp=new ArrayList(6);
      reglaTmp.add("CONSTANTES");
      reglaTmp.add("VARIABLES");
      reglaTmp.add("ARREGLOS");
      reglaTmp.add("REGISTROS");
      reglaTmp.add("PROTOTIPOS");
      reglaTmp.add("MODULOS");
      Reglas.put("ArchivosH",reglaTmp);
      //int array31[]={5,11,19,40,53,57};
      int array31[]={250,250,250,250,250,250};
      ReglasE.put("ArchivosH",array31);